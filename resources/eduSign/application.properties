# Logging turn on these to see more detailed logging if needed
#logging.level.se.idsec.sigval.cert=DEBUG
#logging.level.se.idsec.sigval.pdf=DEBUG
#logging.level.se.idsec.sigval.xml=DEBUG
#logging.level.se.idsec.sigval.sigvalservice=DEBUG

# Host
server.port=8080
server.servlet.context-path=/sigval
sigval-service.config.dataDir=${spring.config.additional-location}

# TLS
#server.ssl.key-store=${sigval-service.config.dataDir}/keystore/sslSnakeOil.p12
#server.ssl.key-store-type=PKCS12
#server.ssl.key-store-password=secret
#server.ssl.key-password=secret
#server.ssl.enabled=true

# AJP
tomcat.ajp.port=8009
tomcat.ajp.remoteauthentication=false
tomcat.ajp.enabled=false
tomcat.ajp.secret=#{null}

# Max documetn size parameters
spring.servlet.multipart.max-file-size=5MB

# Presentation UI
sigval-service.ui.html-title.upload=Singed document validation - eduSign - Dev
sigval-service.ui.html-title.result=Singed document validation results - eduSign - Dev
sigval-service.ui.html-title.error=Singed document validation error - eduSign - Dev
# Available styles are "main", "edusign" and "sunet"
sigval-service.ui.style=edusign
sigval-service.ui.logoImage.main=${sigval-service.config.dataDir}img/eduSign.svg
sigval-service.ui.logoImage.secondary=${sigval-service.config.dataDir}img/sunet_gray_logo.svg
sigval-service.ui.issue-svt-if-svt-exist=false
sigval-service.ui.enalbe-signed-data-view=true
sigval-service.ui.show-loa=false
sigval-service.ui.display-downloaded-svt-pdf=true
sigval-service.ui.display-downloaded-svt-xml=true
sigval-service.ui.downloaded-svt-suffix=.svt

# SVT Model
sigval-service.svt.model.issuer-id=https://validator.edusign.sunet.se
sigval-service.svt.model.validity-years=#{null}
sigval-service.svt.model.audience=#{null}
sigval-service.svt.model.cert-ref=false
#sigval-service.svt.model.sig-algo=http://www.w3.org/2001/04/xmldsig-more#rsa-sha512
sigval-service.svt.model.sig-algo=http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512

# Other SVT parameters. A null value sets the default policy 1.2.752.201.2.1
#sigval-service.svt.timestamp.policy=#{null}
sigval-service.svt.issuer-enabled=false
sigval-service.svt.validator-enabled=true

# CRL Cache setup
sigval-service.crl.cache-folder=#{null}
sigval-service.crl.recache-grace-period=5000
sigval-service.crl.recache-delay-seconds=1800
# Validator reload interval
sigval-service.validators.reload-interval-seconds=600

#Certificate validator setup
sigval-service.cert-validator.sig.tsltrust-root=${sigval-service.config.dataDir}trust/EuQCCert_root.cer
sigval-service.cert-validator.sig.trusted-folder=${sigval-service.config.dataDir}trust/sig
sigval-service.cert-validator.tsa.tsltrust-root=${sigval-service.config.dataDir}trust/EuQCTsa_root.cer
sigval-service.cert-validator.tsa.trusted-folder=${sigval-service.config.dataDir}trust/tsa
#sigval-service.cert-validator.svt.tsltrust-root=
sigval-service.cert-validator.svt.trusted-folder=${sigval-service.config.dataDir}trust/svt
sigval-service.cert-validator.svt.kid-match-folder=${sigval-service.config.dataDir}trust/svt

# Proxy Service Key Store properties
# KeySourceType can have the value "jks", "pem", "pkcs11", "pkcs12" or "create".
# For jks and pkcs12, the parameters keySourceLocation, keySourcePass and keySourceAlias must be specified.
# For pem, the parameters keySourceLocation and keySourceCertLocation must be specified. keySourcePass must be specified
# if the PEM private key is encrypted.
# For pkcs11, the parameters keySourcePass, keySourceAlias and keySourceCertLocation must be provided.
# Location can be specified as "classpath:" or as file path e.g "${proxy-service.path.prefix}/keystore/keyStore.jks"

# Main Key source. This key source is always used to sign eIDAS SAML messages, and for everything else if no other sources are defined.
sigval-service.svt.keySourceType=pkcs11
#sigval-service.svt.keySourceLocation=
sigval-service.svt.keySourcePass=1234
sigval-service.svt.keySourceAlias=eduSign
sigval-service.svt.keySourceCertLocation=${sigval-service.config.dataDir}keystores/eduSign.crt

# PKCS11 HSM Settings - Must be set if any key source below is of type "pkcs11"
# Three different types of PKCS11 configurations are available
#
# 1) Externally provided PKCS11 config files by defining one or more config file locations in
#    proxy-service.pkcs11.external-config-locations
# 2) By SoftHSM configuration if the SoftHSM properties below are set
# 3) General PKCS11 configuration for all other values
#

sigval-service.pkcs11.lib=/usr/lib/softhsm/libsofthsm2.so
sigval-service.pkcs11.name=softhsm
#sigval-service.pkcs11.slotListIndex=0
#sigval-service.pkcs11.slotListIndexMaxRange=0
#sigval-service.pkcs11.slot=0
#sigval-service.pkcs11.external-config-locations=${sigval-service.config.dataDir}hsm-cfg/mypkcs11.cfg
# Soft HSM properties
sigval-service.pkcs11.softhsm.keylocation=${sigval-service.config.dataDir}keystores
sigval-service.pkcs11.softhsm.pass=1234
sigval-service.pkcs11.reloadable-keys=false

# Dev
sigval-service.ui.devmode=false
